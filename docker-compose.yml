version: '3.5'

services:
    php:
        container_name: sym4_php
        build: ./.devops/php
        restart: always
        volumes:
            - ./.devops/php/php.ini:/usr/local/etc/php/conf.d/php.ini
            - .:/var/www/html
        environment:
            - PHP_IDE_CONFIG=serverName=symfony4.local
    mysql:
        build: ./.devops/mysql
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - .env
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - 3306:3306
        volumes:
            - ./.data/db/mysql:/var/lib/mysql
    composer:
        container_name: sym4_composer
        image: composer
        user: "1000"
        volumes:
            - .:/app
            - ./.composer_cache:/composer/cache
        command: install -o --prefer-dist
        depends_on:
            - php
    nginx:
        container_name: sym4_nginx
        image: nginx:latest
        restart: always
        ports:
            - 80:80
            - 443:443
        volumes:
            - .:/var/www/html
            - ./.devops/nginx/default.conf:/etc/nginx/conf.d/default.conf
        environment:
            - NGINX_HOST=${NGINX_HOST}
        depends_on:
            - php
            - mysql
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: sym4_phpmyadmin
        ports:
            - 8080:80
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
        restart: always
        depends_on:
            - mysql
    js: &js
        container_name: sym4_node
        build: ./.devops/nodejs
        volumes:
            - .:/gb:rw
        working_dir: /gb
    npm:
        <<: *js
        container_name: sym4_npm
        entrypoint: ["npm"]
    yarn:
        <<: *js
        container_name: sym4_yarn
        entrypoint: ["yarn"]
        command: run encore dev
    ssl:
        container_name: sym4_ssl
        image: paulczar/omgwtfssl
        volumes:
            - ./.devops/ssl:/certs
        environment:
            - SSL_SUBJECT=symfony4.local